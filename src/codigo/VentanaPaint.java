/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package codigo;

import codigo.formas.Circulo;
import codigo.formas.Cuadrado;
import codigo.formas.Estrella;
import codigo.formas.Forma;
import codigo.formas.Linea;
import codigo.formas.Pentagono;
import codigo.formas.Triangulo;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.Random;
import javax.imageio.ImageIO;
import javax.swing.JFileChooser;

/**
 *
 * @author Sarita
 */
public class VentanaPaint extends javax.swing.JFrame {

    BufferedImage buffer, buffer2 = null;
    Graphics2D bufferGraphics, bufferGraphics2, jpanelGraphics = null;
    Circulo miCirculo = null;
    Forma miForma = new Forma(-1, -1, 1, Color.white, false);
    Random aleatorio = new Random();

    /**
     * Creates new form VentanaPaint
     */
    public VentanaPaint() {
        initComponents();
        inicializaBuffers();
        PaletaDeColores.setSize(750, 450);
    }

    private void inicializaBuffers() {
        //CREO UNA IMAGEN DEL MISMO ALTO Y ANCHO QUE EL JPANEL1
        buffer = (BufferedImage) VentanaPintar.createImage(VentanaPintar.getWidth(), VentanaPintar.getHeight());
        buffer2 = (BufferedImage) VentanaPintar.createImage(VentanaPintar.getWidth(), VentanaPintar.getHeight());
//CREO UNA IMAGEN MODIFICABLE
        bufferGraphics = buffer.createGraphics();
        bufferGraphics2 = buffer2.createGraphics();
        //INICIALIZO EL BUFFER PARA QUE SE PINTE DE BLANCO ENTERO
        bufferGraphics.setColor(Color.WHITE);
        bufferGraphics.fillRect(0, 0, VentanaPintar.getWidth(), VentanaPintar.getHeight());
        bufferGraphics2.setColor(Color.WHITE);
        bufferGraphics2.fillRect(0, 0, VentanaPintar.getWidth(), VentanaPintar.getHeight());
        //ENLAZAMOS EL JPANEL1 CON EL JPANELGRAPHICS
        jpanelGraphics = (Graphics2D) VentanaPintar.getGraphics();
    }

    @Override
    public void paint(Graphics g) {
        super.paint(g);
        //PINTO EL BUFFER SOBRE EL JPANEL 
        jpanelGraphics.drawImage(buffer, 0, 0, null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        PaletaDeColores = new javax.swing.JDialog();
        Colores = new javax.swing.JColorChooser();
        Cancelar = new javax.swing.JButton();
        Ok = new javax.swing.JButton();
        GuardarArchivos = new javax.swing.JDialog();
        GuardarArchivito = new javax.swing.JFileChooser();
        VentanaPintar = new javax.swing.JPanel();
        panelDeColores1 = new codigo.PanelDeColores();
        jPanel1 = new javax.swing.JPanel();
        barraHerramientas = new codigo.BarraHerramientas();
        EligeColor = new javax.swing.JButton();
        Menu = new javax.swing.JMenuBar();
        file = new javax.swing.JMenu();
        Guardar = new javax.swing.JMenuItem();
        edit = new javax.swing.JMenu();
        edit1 = new javax.swing.JMenu();

        Cancelar.setBackground(new java.awt.Color(255, 255, 255));
        Cancelar.setText("Cancelar");
        Cancelar.setBorder(null);
        Cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelarActionPerformed(evt);
            }
        });

        Ok.setBackground(new java.awt.Color(255, 255, 255));
        Ok.setText("Ok");
        Ok.setBorder(null);
        Ok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OkActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PaletaDeColoresLayout = new javax.swing.GroupLayout(PaletaDeColores.getContentPane());
        PaletaDeColores.getContentPane().setLayout(PaletaDeColoresLayout);
        PaletaDeColoresLayout.setHorizontalGroup(
            PaletaDeColoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PaletaDeColoresLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Colores, javax.swing.GroupLayout.PREFERRED_SIZE, 615, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(PaletaDeColoresLayout.createSequentialGroup()
                .addGap(95, 95, 95)
                .addComponent(Cancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Ok, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(164, 164, 164))
        );
        PaletaDeColoresLayout.setVerticalGroup(
            PaletaDeColoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PaletaDeColoresLayout.createSequentialGroup()
                .addContainerGap(20, Short.MAX_VALUE)
                .addComponent(Colores, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(PaletaDeColoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Cancelar, javax.swing.GroupLayout.DEFAULT_SIZE, 23, Short.MAX_VALUE)
                    .addComponent(Ok, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 19, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout GuardarArchivosLayout = new javax.swing.GroupLayout(GuardarArchivos.getContentPane());
        GuardarArchivos.getContentPane().setLayout(GuardarArchivosLayout);
        GuardarArchivosLayout.setHorizontalGroup(
            GuardarArchivosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, GuardarArchivosLayout.createSequentialGroup()
                .addContainerGap(57, Short.MAX_VALUE)
                .addComponent(GuardarArchivito, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(71, 71, 71))
        );
        GuardarArchivosLayout.setVerticalGroup(
            GuardarArchivosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(GuardarArchivosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(GuardarArchivito, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(41, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        VentanaPintar.setBackground(new java.awt.Color(255, 255, 255));
        VentanaPintar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        VentanaPintar.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                VentanaPintarMouseDragged(evt);
            }
        });
        VentanaPintar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                VentanaPintarMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                VentanaPintarMouseReleased(evt);
            }
        });

        javax.swing.GroupLayout VentanaPintarLayout = new javax.swing.GroupLayout(VentanaPintar);
        VentanaPintar.setLayout(VentanaPintarLayout);
        VentanaPintarLayout.setHorizontalGroup(
            VentanaPintarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 473, Short.MAX_VALUE)
        );
        VentanaPintarLayout.setVerticalGroup(
            VentanaPintarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 410, Short.MAX_VALUE)
        );

        EligeColor.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/paleta.jpg"))); // NOI18N
        EligeColor.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        EligeColor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EligeColorActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(barraHerramientas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(EligeColor, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(barraHerramientas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(EligeColor, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        file.setText("File");
        file.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fileActionPerformed(evt);
            }
        });

        Guardar.setText("Guardar");
        Guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GuardarActionPerformed(evt);
            }
        });
        file.add(Guardar);

        Menu.add(file);

        edit.setText("Edit");
        Menu.add(edit);

        edit1.setText("Help");
        Menu.add(edit1);

        setJMenuBar(Menu);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelDeColores1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(VentanaPintar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(VentanaPintar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(21, 21, 21)
                .addComponent(panelDeColores1, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void VentanaPintarMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_VentanaPintarMouseDragged
        bufferGraphics.drawImage(buffer2, 0, 0, null);
        switch (barraHerramientas.formaElegida) {
            case 0:
                bufferGraphics2.setColor(panelDeColores1.colorSeleccionado);
                bufferGraphics2.fillOval(evt.getX(), evt.getY(), 4, 4);
                break;
            case 1:
                miCirculo.dibujate(bufferGraphics, evt.getX());
                break;
            case 5:
                miForma.dibujate(bufferGraphics, evt.getX(), evt.getY());
                break;
            case 4:
                miForma.dibujate(bufferGraphics, evt.getX(), evt.getY());
                break;
            case 3:
                miForma.dibujate(bufferGraphics, evt.getX(), evt.getY());
                break;
            case 2:
                miForma.dibujate(bufferGraphics, evt.getX(), evt.getY());
                break;
            case 10:
                bufferGraphics2.setColor(Color.white);
                bufferGraphics2.fillOval(evt.getX(), evt.getY(), 10, 10);
                break;
            case 6:
                bufferGraphics2.setColor(panelDeColores1.colorSeleccionado);
                for (int i = 0; i < 25; i++) {
                    bufferGraphics2.fillOval(evt.getX() + aleatorio.nextInt(20), evt.getY() + aleatorio.nextInt(25), 2, 2);
                }
                break;
            case 7:
                miForma.dibujate(bufferGraphics, evt.getX(), evt.getY());
                break;
            case 8:
                bufferGraphics2.setColor(panelDeColores1.colorSeleccionado);
                bufferGraphics2.fillRect(evt.getX(), evt.getY(), 10, 10);
                break;

        }
        repaint(0, 0, 1, 1);
    }//GEN-LAST:event_VentanaPintarMouseDragged

    private void VentanaPintarMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_VentanaPintarMousePressed
        switch (barraHerramientas.formaElegida) {
            case 0:
                break;
            case 1:
                miCirculo = new Circulo(evt.getX(), evt.getY(), 1,
                        panelDeColores1.colorSeleccionado, barraHerramientas.relleno);
                miCirculo.dibujate(bufferGraphics, evt.getX());
                break;
            case 5:
                miForma = new Pentagono(evt.getX(), evt.getY(), 5,
                        panelDeColores1.colorSeleccionado, barraHerramientas.relleno);
                miForma.dibujate(bufferGraphics, evt.getX(), evt.getY());
                break;
            case 4:
                miForma = new Cuadrado(evt.getX(), evt.getY(), 4,
                        panelDeColores1.colorSeleccionado, barraHerramientas.relleno);
                miForma.dibujate(bufferGraphics, evt.getX(), evt.getY());
                break;
            case 3:
                miForma = new Triangulo(evt.getX(), evt.getY(), 3,
                        panelDeColores1.colorSeleccionado, barraHerramientas.relleno);
                miForma.dibujate(bufferGraphics, evt.getX(), evt.getY());
                break;
            case 2:
                miForma = new Estrella(evt.getX(), evt.getY(), 256,
                        panelDeColores1.colorSeleccionado, barraHerramientas.relleno);
                miForma.dibujate(bufferGraphics, evt.getX(), evt.getY());
                break;
            case 10:
                miForma = new Forma(-1, -1, 1, Color.white, false);
                break;
            case 6:
                miForma = new Forma(-1, -1, 1, Color.white, false);
                break;
            case 7:
                miForma = new Linea(evt.getX(), evt.getY(), 2,
                        panelDeColores1.colorSeleccionado, barraHerramientas.relleno);
                miForma.dibujate(bufferGraphics, evt.getX(), evt.getY());
                break;
            case 8:
                break;
        }
    }//GEN-LAST:event_VentanaPintarMousePressed

    private void VentanaPintarMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_VentanaPintarMouseReleased
        if (barraHerramientas.formaElegida == 1) {
            miCirculo.dibujate(bufferGraphics2, evt.getX());
        } else if (barraHerramientas.formaElegida != 0 || barraHerramientas.formaElegida != 10) {
            miForma.dibujate(bufferGraphics2, evt.getX(), evt.getY());
        }
    }//GEN-LAST:event_VentanaPintarMouseReleased

    private void EligeColorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EligeColorActionPerformed
        PaletaDeColores.setVisible(true);

    }//GEN-LAST:event_EligeColorActionPerformed

    private void OkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OkActionPerformed
        PaletaDeColores.setVisible(false);
        panelDeColores1.colorSeleccionado = Colores.getColor();
    }//GEN-LAST:event_OkActionPerformed

    private void CancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelarActionPerformed
        PaletaDeColores.setVisible(false);
    }//GEN-LAST:event_CancelarActionPerformed

    private void GuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GuardarActionPerformed
        int seleccion = GuardarArchivito.showSaveDialog(this);
        if (seleccion == JFileChooser.APPROVE_OPTION) {
            //Si entra aquí es porque el usuario ha pulsado en "guardar"
            File fichero = GuardarArchivito.getSelectedFile();
            String nombre = fichero.getName();
            String extension = nombre.substring(nombre.lastIndexOf('.') + 1, nombre.length());
            if (extension.equalsIgnoreCase("jpg") || extension.equalsIgnoreCase("png")) {
                try {
                    bufferGraphics.drawImage(ImageIO.read(fichero), 0, 0, null);
                    bufferGraphics2.drawImage(ImageIO.read(fichero), 0, 0, null);
                    repaint(0, 0, 1, 1);
                } catch (IOException e) {
                }
            } else {
                //mensaje de extension no válida
            }
        }
    }//GEN-LAST:event_GuardarActionPerformed

    private void fileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fileActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fileActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaPaint.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaPaint.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaPaint.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaPaint.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaPaint().setVisible(true);

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Cancelar;
    private javax.swing.JColorChooser Colores;
    private javax.swing.JButton EligeColor;
    private javax.swing.JMenuItem Guardar;
    private javax.swing.JFileChooser GuardarArchivito;
    private javax.swing.JDialog GuardarArchivos;
    private javax.swing.JMenuBar Menu;
    private javax.swing.JButton Ok;
    private javax.swing.JDialog PaletaDeColores;
    private javax.swing.JPanel VentanaPintar;
    private codigo.BarraHerramientas barraHerramientas;
    private javax.swing.JMenu edit;
    private javax.swing.JMenu edit1;
    private javax.swing.JMenu file;
    private javax.swing.JPanel jPanel1;
    private codigo.PanelDeColores panelDeColores1;
    // End of variables declaration//GEN-END:variables
}
